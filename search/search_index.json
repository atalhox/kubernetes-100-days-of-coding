{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"home/","title":"Home","text":""},{"location":"home/#1-introducao","title":"1. Introdu\u00e7\u00e3o","text":"<p>O desafio 100 Days of Coding - Kubernetes \u00e9 um plano estruturado para aprender Kubernetes de forma progressiva, abordando conceitos fundamentais, pr\u00e1ticas avan\u00e7adas e implementa\u00e7\u00f5es reais.</p> <p>O objetivo \u00e9 permitir que qualquer pessoa adquira compet\u00eancias s\u00f3lidas na orquestra\u00e7\u00e3o de cont\u00eaineres e na gest\u00e3o de clusters Kubernetes.</p>"},{"location":"home/#2-objetivo","title":"2. Objetivo","text":"<p>Fornecer um guia pr\u00e1tico de estudo di\u00e1rio para aprender Kubernetes, desde os conceitos b\u00e1sicos at\u00e9 implementa\u00e7\u00f5es complexas em ambientes produtivos.</p>"},{"location":"home/#3-publico-alvo","title":"3. P\u00fablico-Alvo","text":"<ul> <li>Desenvolvedores</li> <li>Administradores de sistemas</li> <li>Engenheiros DevOps</li> <li>Arquitetos de software</li> <li>Qualquer profissional interessado em Kubernetes</li> </ul>"},{"location":"home/#4-estrutura-do-desafio","title":"4. Estrutura do Desafio","text":""},{"location":"home/#41-fundamentos-e-introducao-ao-kubernetes","title":"4.1. Fundamentos e Introdu\u00e7\u00e3o ao Kubernetes","text":"Dia Tema T\u00f3picos 1 Introdu\u00e7\u00e3o ao Kubernetes O que \u00e9? Por que us\u00e1-lo? Casos reais 2 Arquitetura do Kubernetes API Server, etcd, Controller Manager, Scheduler 3 Instalando o Kubernetes Minikube, Kind, Kubernetes no Docker 4 Estrutura de um Pod Criando e gerenciando Pods 5 Trabalhando com Labels e Annotations Organiza\u00e7\u00e3o no cluster 6 Namespaces no Kubernetes Gerenciando ambientes isolados 7 Desafio: Criando seu primeiro ambiente Criar Pods e Namespaces do zero 8 Introdu\u00e7\u00e3o a Deployments Criando e gerenciando Deployments 9 Replicasets Garantindo alta disponibilidade 10 Revis\u00e3o e pr\u00e1tica: Pods, Deployments e Replicasets Exerc\u00edcios de fixa\u00e7\u00e3o"},{"location":"home/#42-networking-e-exposicao-de-aplicacoes","title":"4.2. Networking e Exposi\u00e7\u00e3o de Aplica\u00e7\u00f5es","text":"Dia Tema T\u00f3picos 11 Introdu\u00e7\u00e3o a Services Tipos de Services e como expor aplica\u00e7\u00f5es 12 Ingress Controllers Configurando regras de roteamento 13 ConfigMaps e Secrets Gerenciando configura\u00e7\u00f5es seguras 14 Network Policies Controlando comunica\u00e7\u00e3o entre Pods 15 Desafio: Criando uma aplica\u00e7\u00e3o com Ingress Criar um app com regras de roteamento 16 RBAC no Kubernetes Permiss\u00f5es e controle de acesso 17 Revis\u00e3o e pr\u00e1tica: Networking e seguran\u00e7a b\u00e1sica Exerc\u00edcios pr\u00e1ticos 18 Criando um cluster Kubernetes Configura\u00e7\u00e3o com kubeadm 19 Deploy de aplica\u00e7\u00f5es reais Subindo um app completo 20 Desafio: Troubleshooting de deploy Resolver problemas de uma aplica\u00e7\u00e3o quebrada"},{"location":"home/#43-armazenamento-e-gerenciamento-de-estado","title":"4.3. Armazenamento e Gerenciamento de Estado","text":"Dia Tema T\u00f3picos 21 Introdu\u00e7\u00e3o a Volumes Persist\u00eancia de dados no Kubernetes 22 Persistent Volumes e Claims Como funciona o armazenamento 23 StatefulSets Gerenciando aplica\u00e7\u00f5es com estado 24 Dynamic Provisioning de Volumes Automa\u00e7\u00e3o de armazenamento 25 Desafio: Criando um banco de dados persistente Criar um StatefulSet para PostgreSQL 26 Storage avan\u00e7ado CSI (Container Storage Interface) 27 Revis\u00e3o e pr\u00e1tica: Storage no Kubernetes Exerc\u00edcios de fixa\u00e7\u00e3o 28 Desafio: Troubleshooting de storage Resolver um problema de PVC que n\u00e3o monta 29 Introdu\u00e7\u00e3o ao Helm Automa\u00e7\u00e3o com pacotes Kubernetes 30 Desafio: Criando um Helm Chart do zero Pacotizar e versionar uma aplica\u00e7\u00e3o"},{"location":"home/#44-monitoramento-e-observabilidade","title":"4.4. Monitoramento e Observabilidade","text":"Dia Tema T\u00f3picos 31 Configura\u00e7\u00e3o de Logs Logs de Pods e Services 32 Monitoramento com Prometheus Instalando e configurando 33 Visualiza\u00e7\u00e3o com Grafana Criando dashboards 34 Debugging no Kubernetes Identificando e corrigindo erros 35 Kubernetes Events Entendendo eventos no cluster 36 Desafio: Criando um monitoramento completo Implementar observabilidade com logs e m\u00e9tricas 37 Tracing com OpenTelemetry Monitorando requests entre servi\u00e7os 38 Logging avan\u00e7ado Loki e Fluentd 39 Desafio: Troubleshooting de observabilidade Resolver um problema de logs/m\u00e9tricas 40 Revis\u00e3o e pr\u00e1tica: Monitoramento no Kubernetes Exerc\u00edcios pr\u00e1ticos"},{"location":"home/#45-autoscaling-jobs-e-cicd","title":"4.5. Autoscaling, Jobs e CI/CD","text":"Dia Tema T\u00f3picos 41 Trabalhando com Jobs e CronJobs Execu\u00e7\u00e3o de tarefas programadas 42 Autoscaling no Kubernetes Configurando HPA (Horizontal Pod Autoscaler) 43 Criando uma CI/CD com Kubernetes Pipeline b\u00e1sico de deploy 44 ArgoCD Deploy declarativo com GitOps 45 GitOps com Flux Gerenciando vers\u00f5es no Kubernetes 46 Desafio: Criando um pipeline completo CI/CD + deploy autom\u00e1tico 47 Estrat\u00e9gias de Deploy Blue/Green, Canary e Rolling Updates 48 Kubernetes Probes Liveness, Readiness e Startup Probes 49 Desafio: Implementando rollback e health checks Configurar rollback seguro 50 Revis\u00e3o e pr\u00e1tica: Deploy e escalabilidade Exerc\u00edcios pr\u00e1ticos"},{"location":"home/#46-seguranca-e-alta-disponibilidade","title":"4.6. Seguran\u00e7a e Alta Disponibilidade","text":"Dia Tema T\u00f3picos 51 Pol\u00edticas de seguran\u00e7a Pod Security Standards (PSS) 52 Trabalhando com Webhooks Admission Controllers 53 Ferramentas de auditoria Falco e kubeaudit 54 Kubernetes e Service Meshes Istio, Linkerd, Consul 55 Configura\u00e7\u00e3o de TLS no Kubernetes Certificados e seguran\u00e7a 56 Desafio: Criando uma pol\u00edtica de seguran\u00e7a Configurar PSS e RBAC 57 Kubernetes API Extensions API Aggregation Layer 58 Custom Resource Definitions (CRDs) Criando recursos personalizados 59 Operators no Kubernetes Automatizando tarefas complexas 60 Desafio: Criando um Operator simples Criar um Operator para uma aplica\u00e7\u00e3o"},{"location":"home/#47-kubernetes-avancado-e-projeto-final","title":"4.7. Kubernetes Avan\u00e7ado e Projeto Final","text":"Dia Tema T\u00f3picos 61 Multi-tenancy no Kubernetes Isolamento e seguran\u00e7a 62 Kubernetes Federation Gerenciando m\u00faltiplos clusters 63 Kubernetes no Edge Computing Projetos reais 64 Kubernetes e Serverless Knative e OpenFaaS 65 Kubernetes e IA TensorFlow on Kubernetes 66 Desafio: Kubernetes em ambiente h\u00edbrido Criar um cluster multi-cloud 67 Kubernetes para workloads Windows Containers Windows 68 Kubernetes no 5G Aplica\u00e7\u00f5es e desafios 69 Desafio: Kubernetes em produ\u00e7\u00e3o Configura\u00e7\u00e3o avan\u00e7ada para HA"},{"location":"home/#48-kubernetes-na-pratica-preparacao-para-o-projeto-final","title":"4.8. Kubernetes na Pr\u00e1tica: Prepara\u00e7\u00e3o para o Projeto Final","text":"Dia Tema T\u00f3picos 70 Revis\u00e3o: Kubernetes para produ\u00e7\u00e3o Checklist de um cluster real 71 Estrat\u00e9gias avan\u00e7adas de deploy Blue/Green, Canary, Rolling Updates 72 Trabalhando com Sidecars e Init Containers Melhores pr\u00e1ticas e casos de uso 73 Kubernetes Probes Configura\u00e7\u00e3o de Liveness, Readiness e Startup Probes 74 Pod Disruption Budgets Mantendo alta disponibilidade 75 Trabalhando com Webhooks no Kubernetes Admission Controllers 76 Kubernetes Gateway API vs Ingress Diferen\u00e7as e futuro 77 Revis\u00e3o: Seguran\u00e7a no Kubernetes Pr\u00e1ticas essenciais para clusters seguros 78 Configura\u00e7\u00e3o de DNS no Kubernetes CoreDNS e coredns-custom 79 Revis\u00e3o: Troubleshooting avan\u00e7ado Exerc\u00edcios pr\u00e1ticos de debug"},{"location":"home/#49-kubernetes-e-aplicacoes-modernas","title":"4.9. Kubernetes e Aplica\u00e7\u00f5es Modernas","text":"Dia Tema T\u00f3picos 80 Kubernetes e Big Data Spark on Kubernetes 81 Kubernetes e WebAssembly WASM em cont\u00eaineres 82 Kubernetes e IoT Orquestra\u00e7\u00e3o de dispositivos 83 Kubernetes e Blockchain Casos de uso reais 84 Kubernetes e Web3 Infraestrutura descentralizada 85 Kubernetes e FinOps Redu\u00e7\u00e3o de custos na nuvem 86 Revis\u00e3o: Kubernetes para microsservi\u00e7os Estrat\u00e9gias recomendadas 87 Kubernetes para aplica\u00e7\u00f5es monol\u00edticas Viabilidade e desafios 88 Kubernetes Federation Gerenciamento multi-cloud avan\u00e7ado 89 Kubernetes para redes 5G Deploy de aplica\u00e7\u00f5es cr\u00edticas"},{"location":"home/#410-kubernetes-em-producao","title":"4.10. Kubernetes em Produ\u00e7\u00e3o","text":"Dia Tema T\u00f3picos 90 Revis\u00e3o: Armazenamento no Kubernetes Compara\u00e7\u00e3o de op\u00e7\u00f5es e melhores pr\u00e1ticas 91 Revis\u00e3o: Seguran\u00e7a em ambientes multi-cloud Kubernetes federado 92 Kubernetes no Edge Computing Desafios reais e melhores pr\u00e1ticas 93 Ferramentas para Kubernetes nativo Lens, Octant, Portainer 94 Kubernetes e redes definidas por software (SDN) Cilium, Calico 95 Trabalhando com Webhooks e Admission Controllers Pol\u00edticas customizadas 96 Kubernetes e Service Meshes Compara\u00e7\u00e3o: Istio, Linkerd, Consul 97 Gerenciamento de custos no Kubernetes Kubecost e OpenCost 98 Criando clusters ef\u00eameros Terraform e Kubernetes 99 Revis\u00e3o final: Kubernetes em Produ\u00e7\u00e3o Checklist e boas pr\u00e1ticas 100 ~ Projeto Final Criar um cluster Kubernetes completo e otimizado"},{"location":"home/#5-guia-de-uso","title":"5. Guia de Uso","text":"<ol> <li>Siga a ordem sugerida, estudando um t\u00f3pico por dia.</li> <li>Pratique cada conceito implementando no Kubernetes.</li> <li>Utilize a documenta\u00e7\u00e3o oficial e cursos complementares.</li> <li>Participe de comunidades e discuta desafios di\u00e1rios.</li> <li>Documente seu progresso em um blog ou GitHub.</li> </ol>"},{"location":"home/#6-referencias","title":"6. Refer\u00eancias","text":"<ul> <li>Documenta\u00e7\u00e3o oficial do Kubernetes</li> <li>Kubernetes The Hard Way - Kelsey Hightower</li> <li>Certifica\u00e7\u00e3o Kubernetes CKA e CKAD</li> </ul>"},{"location":"fundamentos/arquitetura/","title":"Arquitetura","text":""},{"location":"fundamentos/arquitetura/#1-introducao","title":"1. Introdu\u00e7\u00e3o","text":"<p>O Kubernetes \u00e9 uma plataforma de orquestra\u00e7\u00e3o de cont\u00eaineres open-source amplamente adotada para gerenciar aplica\u00e7\u00f5es em cont\u00eaineres de forma escal\u00e1vel, resiliente e automatizada. Ele abstrai a infraestrutura subjacente e fornece uma interface declarativa para definir, implantar e gerenciar aplica\u00e7\u00f5es distribu\u00eddas.</p>"},{"location":"fundamentos/arquitetura/#2-objetivo","title":"2. Objetivo","text":"<p>Este documento detalha a arquitetura do Kubernetes, explicando seus principais componentes, funcionamento interno e como os diferentes elementos interagem para fornecer alta disponibilidade, escalabilidade e automa\u00e7\u00e3o.</p>"},{"location":"fundamentos/arquitetura/#3-publico-alvo","title":"3. P\u00fablico-Alvo","text":"<p>Este documento \u00e9 voltado para desenvolvedores, engenheiros de DevOps, administradores de sistemas e arquitetos de software que desejam aprofundar seu conhecimento sobre a estrutura do Kubernetes.</p>"},{"location":"fundamentos/arquitetura/#4-arquitetura-geral","title":"4. Arquitetura Geral","text":"<p>O Kubernetes segue um modelo baseado em cluster, onde um conjunto de n\u00f3s trabalham em conjunto para executar e gerenciar aplica\u00e7\u00f5es. A arquitetura pode ser dividida em dois grandes grupos:</p>"},{"location":"fundamentos/arquitetura/#41-plano-de-controle-control-plane","title":"4.1. Plano de Controle (Control Plane)","text":"<p>O plano de controle \u00e9 respons\u00e1vel por gerenciar o estado do cluster, garantindo que as aplica\u00e7\u00f5es e servi\u00e7os estejam em conformidade com as defini\u00e7\u00f5es desejadas. Ele \u00e9 composto por diversos componentes que trabalham em conjunto para coordenar as opera\u00e7\u00f5es do cluster.</p>"},{"location":"fundamentos/arquitetura/#411-api-server","title":"4.1.1 API Server","text":"<p>O API Server \u00e9 o principal ponto de entrada para a comunica\u00e7\u00e3o com o Kubernetes. Ele exp\u00f5e uma API RESTful que recebe e processa todas as solicita\u00e7\u00f5es, sejam elas de usu\u00e1rios, componentes internos ou ferramentas automatizadas.</p> <p>Problema que resolve</p> <p>O API Server resolve o problema de gerenciamento centralizado, permitindo que diferentes clientes e componentes interajam com o cluster de forma padronizada.</p>"},{"location":"fundamentos/arquitetura/#como-interagir-com-o-api-server","title":"Como interagir com o API Server","text":"<p>A intera\u00e7\u00e3o com o API Server pode ser feita por meio da kubectl, que \u00e9 a ferramenta de linha de comando oficial, ou diretamente via chamadas REST.</p> <p>Exemplo de requisi\u00e7\u00e3o REST:</p> <pre><code>curl -X GET https://&lt;API_SERVER&gt;/api/v1/nodes -H \"Authorization: Bearer &lt;TOKEN&gt;\"\n</code></pre>"},{"location":"fundamentos/arquitetura/#412-etcd","title":"4.1.2 Etcd","text":"<p>O etcd \u00e9 um banco de dados distribu\u00eddo que armazena o estado do cluster. Ele mant\u00e9m informa\u00e7\u00f5es sobre n\u00f3s, pods, servi\u00e7os, pol\u00edticas de rede e demais configura\u00e7\u00f5es.</p> <p>Import\u00e2ncia do etcd</p> <p>Se o etcd falhar, o cluster pode ficar inconsistente e at\u00e9 inoper\u00e1vel. Por isso, ele deve ser altamente dispon\u00edvel e devidamente replicado.</p>"},{"location":"fundamentos/arquitetura/#como-interagir-com-o-etcd","title":"Como interagir com o etcd","text":"<p>O etcd pode ser acessado diretamente via etcdctl, a ferramenta de linha de comando oficial.</p> <p>Exemplo de consulta ao etcd:</p> <pre><code>etcdctl get /registry/pods --prefix --keys-only\n</code></pre>"},{"location":"fundamentos/arquitetura/#413-controller-manager","title":"4.1.3 Controller Manager","text":"<p>O Controller Manager \u00e9 respons\u00e1vel por executar v\u00e1rios controladores que monitoram o estado do cluster e realizam as a\u00e7\u00f5es necess\u00e1rias para mant\u00ea-lo conforme definido.</p> <p>Problema que resolve</p> <p>Sem um mecanismo de controle, o Kubernetes n\u00e3o teria como garantir que os objetos do cluster estejam sempre no estado desejado.</p>"},{"location":"fundamentos/arquitetura/#como-interagir-com-o-controller-manager","title":"Como interagir com o Controller Manager","text":"<p>O Controller Manager opera de maneira aut\u00f4noma e n\u00e3o exp\u00f5e uma API direta, mas seu funcionamento pode ser monitorado atrav\u00e9s de logs e m\u00e9tricas no API Server.</p> <p>Exemplo de verifica\u00e7\u00e3o de logs:</p> <pre><code>kubectl logs -n kube-system kube-controller-manager-&lt;id&gt;\n</code></pre>"},{"location":"fundamentos/arquitetura/#414-scheduler","title":"4.1.4 Scheduler","text":"<p>O Scheduler \u00e9 o componente que decide em quais n\u00f3s os pods ser\u00e3o alocados com base em crit\u00e9rios como disponibilidade de recursos, afinidade, restri\u00e7\u00f5es de localiza\u00e7\u00e3o e pol\u00edticas do cluster.</p> <p>Agendamento eficiente</p> <p>O agendamento eficiente \u00e9 essencial para garantir um uso balanceado dos recursos e evitar gargalos de desempenho.</p>"},{"location":"fundamentos/arquitetura/#como-interagir-com-o-scheduler","title":"Como interagir com o Scheduler","text":"<p>O Scheduler tamb\u00e9m opera de forma autom\u00e1tica e n\u00e3o possui uma API exposta diretamente, mas \u00e9 poss\u00edvel verificar o funcionamento e logs via kubectl.</p> <p>Exemplo de an\u00e1lise dos logs do Scheduler:</p> <pre><code>kubectl logs -n kube-system kube-scheduler-&lt;id&gt;\n</code></pre>"},{"location":"fundamentos/arquitetura/#42-nodos-de-trabalho-worker-nodes","title":"4.2. Nodos de Trabalho (Worker Nodes)","text":"<p>Os Worker Nodes s\u00e3o respons\u00e1veis por executar as cargas de trabalho dentro do cluster. Cada n\u00f3 de trabalho executa os pods, que s\u00e3o os menores componentes execut\u00e1veis de uma aplica\u00e7\u00e3o.</p>"},{"location":"fundamentos/arquitetura/#421-kubelet","title":"4.2.1 Kubelet","text":"<p>O Kubelet \u00e9 um agente que roda em cada Worker Node e \u00e9 respons\u00e1vel por garantir que os cont\u00eaineres dos pods sejam executados corretamente. Ele se comunica com o API Server para receber comandos e enviar atualiza\u00e7\u00f5es do estado do n\u00f3.</p> <p>Problema que resolve</p> <p>Sem o Kubelet, o Kubernetes n\u00e3o teria como garantir que os pods estejam sempre rodando conforme esperado nos n\u00f3s de trabalho.</p>"},{"location":"fundamentos/arquitetura/#como-interagir-com-o-kubelet","title":"Como interagir com o Kubelet","text":"<p>O Kubelet pode ser acessado localmente no n\u00f3 atrav\u00e9s de sua API.</p> <p>Exemplo de requisi\u00e7\u00e3o:</p> <pre><code>curl -s http://localhost:10255/pods\n</code></pre>"},{"location":"fundamentos/arquitetura/#422-container-runtime","title":"4.2.2 Container Runtime","text":"<p>O Container Runtime \u00e9 o software que executa os cont\u00eaineres dentro do n\u00f3. O Kubernetes \u00e9 compat\u00edvel com diversos runtimes, como Docker, containerd e CRI-O.</p> <p>Escolha do runtime</p> <p>A escolha do runtime pode impactar a performance, a seguran\u00e7a e a compatibilidade do cluster.</p>"},{"location":"fundamentos/arquitetura/#como-interagir-com-o-container-runtime","title":"Como interagir com o Container Runtime","text":"<p>A intera\u00e7\u00e3o depende do runtime utilizado. No caso do containerd, pode-se usar ctr:</p> <pre><code>ctr -n k8s.io containers list\n</code></pre>"},{"location":"fundamentos/arquitetura/#423-kube-proxy","title":"4.2.3 Kube Proxy","text":"<p>O Kube Proxy gerencia a comunica\u00e7\u00e3o dentro do cluster, garantindo que os servi\u00e7os possam se comunicar entre si de forma transparente, independentemente do n\u00f3 onde est\u00e3o sendo executados.</p> <p>Problema que resolve</p> <p>Sem o Kube Proxy, os pods n\u00e3o conseguiriam se comunicar corretamente dentro do cluster, tornando invi\u00e1vel a execu\u00e7\u00e3o de aplica\u00e7\u00f5es distribu\u00eddas.</p>"},{"location":"fundamentos/arquitetura/#como-interagir-com-o-kube-proxy","title":"Como interagir com o Kube Proxy","text":"<p>O Kube Proxy opera automaticamente, mas seus logs podem ser inspecionados:</p> <pre><code>kubectl logs -n kube-system kube-proxy-&lt;id&gt;\n</code></pre>"},{"location":"fundamentos/arquitetura/#5-comunicacao-interna-do-kubernetes","title":"5. Comunica\u00e7\u00e3o Interna do Kubernetes","text":"<p>Os componentes do Kubernetes se comunicam por meio de API endpoints, usando gRPC ou RESTful HTTP. O etcd armazena todos os estados do cluster, e os componentes do plano de controle interagem com ele constantemente para garantir a consist\u00eancia dos dados.</p>"},{"location":"fundamentos/arquitetura/#51-comunicacao-entre-api-server-e-etcd","title":"5.1. Comunica\u00e7\u00e3o entre API Server e etcd","text":"<ul> <li>O API Server l\u00ea e escreve estados no etcd utilizando chamadas seguras com TLS.</li> <li>Todos os componentes do plano de controle acessam o etcd para garantir que o estado do cluster esteja sempre atualizado.</li> </ul>"},{"location":"fundamentos/arquitetura/#52-comunicacao-entre-o-api-server-e-os-worker-nodes","title":"5.2. Comunica\u00e7\u00e3o entre o API Server e os Worker Nodes","text":"<ul> <li>O API Server envia comandos para os kubelets nos n\u00f3s de trabalho.</li> <li>Os Worker Nodes reportam status ao API Server regularmente.</li> </ul>"},{"location":"fundamentos/arquitetura/#6-modelos-de-deploy-do-kubernetes","title":"6. Modelos de Deploy do Kubernetes","text":"<p>O Kubernetes pode ser implantado de v\u00e1rias formas, dependendo da necessidade da organiza\u00e7\u00e3o:</p> <ul> <li>Bare Metal: Instala\u00e7\u00e3o direta em servidores f\u00edsicos sem virtualiza\u00e7\u00e3o.</li> <li>Cloud-Managed Kubernetes: Solu\u00e7\u00f5es gerenciadas como Google Kubernetes Engine (GKE), Amazon EKS e Azure AKS.</li> <li>Kubernetes On-Premises: Executado em infraestrutura privada com ferramentas como kubeadm ou OpenShift.</li> </ul>"},{"location":"fundamentos/arquitetura/#7-seguranca-no-kubernetes","title":"7. Seguran\u00e7a no Kubernetes","text":"<p>O Kubernetes implementa v\u00e1rias camadas de seguran\u00e7a para proteger os recursos e aplica\u00e7\u00f5es:</p> <ul> <li>RBAC (Role-Based Access Control): Define permiss\u00f5es de acesso granularizadas.</li> <li>Network Policies: Controlam a comunica\u00e7\u00e3o entre pods e servi\u00e7os.</li> <li>Pod Security Policies: Restringem permiss\u00f5es e capacidades dos cont\u00eaineres.</li> <li>TLS e Certificados: Comunica\u00e7\u00e3o segura entre componentes.</li> </ul>"},{"location":"fundamentos/arquitetura/#8-monitoramento-e-logging","title":"8. Monitoramento e Logging","text":"<p>Para manter a observabilidade do cluster, o Kubernetes suporta diversas ferramentas de monitoramento e logging:</p> <ul> <li>Prometheus: Coleta m\u00e9tricas do cluster e dos pods.</li> <li>Grafana: Exibe dashboards de m\u00e9tricas coletadas.</li> <li>Fluentd: Agrega logs de cont\u00eaineres para centraliza\u00e7\u00e3o.</li> </ul>"},{"location":"fundamentos/arquitetura/#9-escalabilidade-no-kubernetes","title":"9. Escalabilidade no Kubernetes","text":"<p>O Kubernetes suporta escalabilidade horizontal e vertical de aplica\u00e7\u00f5es:</p> <ul> <li>Horizontal Pod Autoscaler (HPA): Ajusta automaticamente o n\u00famero de r\u00e9plicas de um pod com base em m\u00e9tricas de uso.</li> <li>Vertical Pod Autoscaler (VPA): Ajusta os recursos (CPU e mem\u00f3ria) dos pods dinamicamente.</li> <li>Cluster Autoscaler: Ajusta a quantidade de n\u00f3s no cluster conforme a demanda.</li> </ul>"},{"location":"fundamentos/arquitetura/#10-referencias","title":"10. Refer\u00eancias","text":"<ul> <li>Documenta\u00e7\u00e3o Oficial do Kubernetes</li> <li>CNCF - Cloud Native Computing Foundation</li> <li>Guia de Administra\u00e7\u00e3o do Kubernetes</li> </ul>"},{"location":"fundamentos/introducao/","title":"Introdu\u00e7\u00e3o","text":""},{"location":"fundamentos/introducao/#1-o-que-e-kubernetes","title":"1. O que \u00e9 Kubernetes?","text":"<p>Kubernetes (tamb\u00e9m conhecido como K8s) \u00e9 uma plataforma de orquestra\u00e7\u00e3o de containers open-source criada inicialmente pelo Google e atualmente mantida pela Cloud Native Computing Foundation (CNCF). </p> <p>Seu objetivo principal \u00e9 automatizar a implanta\u00e7\u00e3o, a escalabilidade e o gerenciamento de aplicativos containerizados.</p> <p>Pontos-chave</p> <ul> <li>Orquestra\u00e7\u00e3o de Cont\u00eaineres: Agrupa e gerencia cont\u00eaineres em clusters.</li> <li>Escalabilidade e Vertical: Permite aumentar ou reduzir a quantidade de r\u00e9plicas de acordo com a demanda (horizontal) ou ajustar os recursos alocados para cada cont\u00eainer (vertical).</li> <li>Autorreparo (Self-Healing): Restaura cont\u00eaineres que falham ou param de responder.</li> <li>Distribui\u00e7\u00e3o Inteligente de Carga: Otimiza recursos e performance.</li> </ul>"},{"location":"fundamentos/introducao/#11-como-surgiu","title":"1.1. Como Surgiu?","text":"<p>O Kubernetes surgiu como uma evolu\u00e7\u00e3o interna do Google Borg, uma plataforma de orquestra\u00e7\u00e3o propriet\u00e1ria do Google. </p> <p>Dada sua efic\u00e1cia e robustez, o Google decidiu torn\u00e1-lo open-source e, desde ent\u00e3o, ele se tornou um padr\u00e3o da ind\u00fastria para gerenciamento de cont\u00eaineres.</p>"},{"location":"fundamentos/introducao/#2-principais-conceitos-e-componentes","title":"2. Principais Conceitos e Componentes","text":"<p>Para dominar Kubernetes, \u00e9 importante entender os seguintes componentes:</p> <ul> <li>Cluster: Conjunto de m\u00e1quinas (f\u00edsicas ou virtuais) que executam Kubernetes.</li> <li>N\u00f3 (Node): Cada m\u00e1quina dentro do cluster (Worker Node) que executa cont\u00eaineres. H\u00e1 tamb\u00e9m o Master Node, respons\u00e1vel pelo controle do cluster.</li> <li>Pod: A menor unidade de implanta\u00e7\u00e3o em Kubernetes; geralmente cont\u00e9m um ou mais cont\u00eaineres que compartilham rede e armazenamento.</li> <li>ReplicaSet: Garante que um n\u00famero desejado de Pods esteja em execu\u00e7\u00e3o.</li> <li>Deployment: Fornece uma camada superior de controle sobre ReplicaSets, facilitando atualiza\u00e7\u00f5es e rollbacks.</li> <li>Service: Cria uma camada de abstra\u00e7\u00e3o para expor os Pods a outros servi\u00e7os ou ao mundo externo.</li> <li>Ingress: Recurso que gerencia o acesso externo aos servi\u00e7os, geralmente fornecendo balanceamento de carga e roteamento HTTP.</li> <li>ConfigMap e Secret: Armazenam configura\u00e7\u00f5es e dados sens\u00edveis para uso nos Pods.</li> </ul> <p>Dica</p> <p>Familiarize-se com conceitos fundamentais como Pods e Services antes de avan\u00e7ar para t\u00f3picos mais complexos.</p>"},{"location":"fundamentos/introducao/#3-por-que-usar-kubernetes","title":"3. Por que Usar Kubernetes?","text":""},{"location":"fundamentos/introducao/#31-escalabilidade","title":"3.1. Escalabilidade","text":"<p>Kubernetes facilita a escalabilidade horizontal (scale out) de aplica\u00e7\u00f5es. Voc\u00ea pode facilmente aumentar ou diminuir o n\u00famero de r\u00e9plicas de cont\u00eaineres executando um determinado servi\u00e7o.</p> <p>Cuidado com os custos</p> <p>A escalabilidade pode trazer custos adicionais se a infraestrutura n\u00e3o for bem gerenciada. Planeje quotas e limites de recursos.</p>"},{"location":"fundamentos/introducao/#32-portabilidade-multicloud","title":"3.2. Portabilidade Multicloud","text":"<p>Por ser compat\u00edvel com v\u00e1rias plataformas (on-premises, nuvens p\u00fablicas e h\u00edbridas), o Kubernetes possibilita a migra\u00e7\u00e3o de cargas de trabalho entre diferentes provedores sem grandes esfor\u00e7os.</p> <p>Benef\u00edcio</p> <p>Evita o lock-in em um \u00fanico provedor de nuvem, ampliando a liberdade de escolha.</p>"},{"location":"fundamentos/introducao/#33-autorreparo-e-atualizacoes-sem-interrupcoes","title":"3.3. Autorreparo e atualiza\u00e7\u00f5es sem interrup\u00e7\u00f5es","text":"<p>O Kubernetes oferece mecanismos avan\u00e7ados de autorreparo para garantir alta disponibilidade das aplica\u00e7\u00f5es. </p> <p>Se um cont\u00eainer falhar, o orquestrador automaticamente o substitui por uma nova inst\u00e2ncia saud\u00e1vel, garantindo a continuidade do servi\u00e7o sem interven\u00e7\u00e3o manual.</p> <p>Al\u00e9m disso, os Deployments facilitam atualiza\u00e7\u00f5es rolling ao substituir gradualmente as inst\u00e2ncias antigas por novas, garantindo que a aplica\u00e7\u00e3o permane\u00e7a acess\u00edvel durante todo o processo. </p> <p>Caso ocorra algum problema, o Kubernetes permite rollbacks autom\u00e1ticos, revertendo rapidamente para uma vers\u00e3o est\u00e1vel sem causar indisponibilidade significativa.</p>"},{"location":"fundamentos/introducao/#34-comunidade-ativa-e-ecossistema-rico","title":"3.4. Comunidade ativa e ecossistema rico","text":"<p>A ado\u00e7\u00e3o massiva e o suporte da CNCF geram um ecossistema cheio de ferramentas e integra\u00e7\u00f5es, como Helm (gerenciador de pacotes), Prometheus (monitoramento), Istio (malha de servi\u00e7o), entre outros.</p>"},{"location":"fundamentos/introducao/#4-casos-reais-de-uso","title":"4. Casos Reais de Uso","text":""},{"location":"fundamentos/introducao/#41-spotify","title":"4.1. Spotify","text":"<p>O Spotify, servi\u00e7o de streaming de m\u00fasica com mais de 200 milh\u00f5es de usu\u00e1rios ativos mensais, adotou microsservi\u00e7os e cont\u00eaineres Docker para gerenciar sua infraestrutura.</p> <p>Inicialmente, utilizava um sistema pr\u00f3prio de orquestra\u00e7\u00e3o chamado Helios, mas posteriormente migrou para o Kubernetes para aproveitar os benef\u00edcios de uma comunidade maior e recursos mais avan\u00e7ados. </p> <p>Essa transi\u00e7\u00e3o permitiu ao Spotify aumentar a efici\u00eancia no desenvolvimento, melhorar a utiliza\u00e7\u00e3o de recursos e garantir tempos de resposta adequados, mesmo em hor\u00e1rios de pico.</p>"},{"location":"fundamentos/introducao/#42-airbnb","title":"4.2. Airbnb","text":"<p>O Airbnb, plataforma de hospedagem global, migrou de uma arquitetura monol\u00edtica para uma arquitetura orientada a servi\u00e7os (SOA) em 2018, visando melhorar a escalabilidade e a efici\u00eancia operacional. </p> <p>A empresa utiliza o Kubernetes para gerenciar sua infraestrutura em nuvem e lidar com as varia\u00e7\u00f5es di\u00e1rias de tr\u00e1fego. </p> <p>Essa mudan\u00e7a permitiu ao Airbnb simplificar a implanta\u00e7\u00e3o e a escalabilidade de sua plataforma, garantindo que os servi\u00e7os permane\u00e7am confi\u00e1veis mesmo em per\u00edodos de alta demanda.</p>"},{"location":"fundamentos/introducao/#43-shopify","title":"4.3. Shopify","text":"<p>A Shopify, uma das maiores plataformas de e-commerce do mundo, tamb\u00e9m utiliza Kubernetes para gerenciar sua infraestrutura. </p> <p>Com milh\u00f5es de lojas online e picos de tr\u00e1fego durante eventos como a Black Friday, a Shopify precisa de uma solu\u00e7\u00e3o robusta e escal\u00e1vel. </p> <p>O Kubernetes permite que a Shopify escale seus servi\u00e7os de forma eficiente e mantenha alta disponibilidade, garantindo uma experi\u00eancia de compra fluida para seus usu\u00e1rios.</p>"},{"location":"fundamentos/introducao/#44-google-cloud-aws-e-azure","title":"4.4. Google Cloud, AWS e Azure","text":"<p>Os principais provedores de nuvem \u2014 Google Cloud Platform, Amazon Web Services e Microsoft Azure \u2014 oferecem servi\u00e7os gerenciados baseados em Kubernetes (GKE, EKS e AKS, respectivamente), facilitando ainda mais a ado\u00e7\u00e3o.</p>"},{"location":"fundamentos/introducao/#5-desafios-e-boas-praticas","title":"5. Desafios e Boas Pr\u00e1ticas","text":""},{"location":"fundamentos/introducao/#51-complexidade-inicial","title":"5.1. Complexidade Inicial","text":"<p>Invista em treinamento e testes em ambientes isolados (como Minikube ou KIND) antes de colocar em produ\u00e7\u00e3o.</p> <p>Curva de aprendizado</p> <p>Kubernetes tem uma curva de aprendizado acentuada. Inicie com tutoriais e laborat\u00f3rios pr\u00e1ticos.</p>"},{"location":"fundamentos/introducao/#52-monitoramento-e-observabilidade","title":"5.2. Monitoramento e Observabilidade","text":"<p>Ferramentas como Prometheus, Grafana e Elasticsearch/Kibana s\u00e3o essenciais para monitorar m\u00e9tricas e logs em um ambiente Kubernetes.</p> <p>Configure alertas (alertmanager) e dashboards claros para acompanhar recursos e desempenho.</p>"},{"location":"fundamentos/introducao/#53-seguranca","title":"5.3. Seguran\u00e7a","text":"<p>Atualize frequentemente para as \u00faltimas vers\u00f5es do Kubernetes, seguindo as recomenda\u00e7\u00f5es de seguran\u00e7a.</p> <p>Pol\u00edticas de Seguran\u00e7a</p> <p>Use Network Policies, RBAC (controle de acesso baseado em pap\u00e9is) e Segredos para proteger dados sens\u00edveis.</p>"},{"location":"fundamentos/introducao/#54-gestao-de-custos","title":"5.4. Gest\u00e3o de Custos","text":"<p>O dimensionamento autom\u00e1tico (auto-scaling) e a capacidade de executar aplicativos em m\u00faltiplos n\u00f3s podem aumentar os custos se n\u00e3o forem bem planejados.</p> <p>Defina limites e requisi\u00e7\u00f5es de recursos para cada Pod, garantindo que aplicativos usem apenas o necess\u00e1rio.</p>"}]}